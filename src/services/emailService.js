require('dotenv').config();
import nodemailer from 'nodemailer';

let sendSimpleEmail = async (dataSend) => {
  let transporter = nodemailer.createTransport({
    host: "smtp.gmail.com",
    port: 465,
    secure: true,
    auth: {
      // TODO: replace `user` and `pass` values from <https://forwardemail.net>
      user: process.env.EMAIL_APP,
      pass: process.env.EMAIL_APP_PASSWORD
    }
  });

  // async..await is not allowed in global scope, must use a wrapper

  // send mail with defined transport object
  let info = await transporter.sendMail({
    from: '"TrinhnkGCS18897 üëª" <khoami123678@gmail.com>', // sender address
    to: dataSend.receiversEmail, // list of receivers
    subject: "Th√¥ng tin ƒë·∫∑t l·ªãch kh√°m b·ªánh", // Subject line
    html: getBodyHTMLEmail(dataSend), // html body
  });

}

let getBodyHTMLEmail = (dataSend) => {
  let result = '';
  if (dataSend.language === 'en') {
    result =
      `
    <h3>Dear ${dataSend.patientName},</h3>
    <p>Livecare would like to send you information about the medical examination schedule you have booked.</p>
    <p><b>Medical examination schedule information:</b></p>
    <p><b>Doctor:</b> ${dataSend.doctorName},</p>
    <p><b>Timen:</b> ${dataSend.time}</p>
    <div>If the above information is correct with the information you placed, 
    please click on the link below to confirm and complete the medical appointment booking process in 10 minutes.</div>
    <div>
      <a href=${dataSend.redirectLink} target="_blank">Click here</a>
    </div>
    <h4>Sincerely thank!</h4>
    `
  }

  if (dataSend.language === 'vi') {
    result =
      `
    <h3>Xin ch√†o ${dataSend.patientName},</h3>
    <p>Booking care xin g·ª≠i th√¥ng tin l·ªãch kh√°m b·ªánh b·∫°n ƒë√£ ƒë·∫∑t.</p>
    <p><b>Th√¥ng tin l·ªãch kh√°m b·ªánh:</b></p>
    <p><b>B√°c sƒ©:</b> ${dataSend.doctorName},</p>
    <p><b>Th·ªùi gian:</b> ${dataSend.time}</p>
    <div>N·∫øu th√¥ng tin tr√™n ƒë√∫ng v·ªõi th√¥ng tin b·∫°n ƒë·∫∑t, xin vui l√≤ng click v√†o ƒë∆∞·ªùng link b√™n d∆∞·ªõi ƒë·ªÉ x√°c nh·∫≠n v√† 
    ho√†n t·∫•t th·ª≠ t·ª•c ƒë·∫∑t l·ªãch kh√°m b·ªánh trong v√≤ng 10 ph√∫t.</div>
    <div>
      <a href=${dataSend.redirectLink} target="_blank">Click here</a>
    </div>
    <h4>Xin ch√¢n th√†nh c·∫£m ∆°n!</h4>
    `
  }

  return result;
}

let sendAttachment = async (dataSend) => {
  return new Promise(async (resolve, reject) => {
    try {
      let transporter = nodemailer.createTransport({
        host: "smtp.gmail.com",
        port: 465,
        secure: true,
        auth: {
          // TODO: replace `user` and `pass` values from <https://forwardemail.net>
          user: process.env.EMAIL_APP,
          pass: process.env.EMAIL_APP_PASSWORD
        }
      });

      // async..await is not allowed in global scope, must use a wrapper

      // send mail with defined transport object
      let info = await transporter.sendMail({
        from: '"TrinhnkGCS18897 üëª" <khoami123678@gmail.com>', // sender address
        to: dataSend.email, // list of receivers
        subject: "K·∫øt qu·∫£ kh√°m b·ªánh", // Subject line
        html: getBodyHTMLEmailRemedy(dataSend), // html body
        attachments: [{
          filename: `remedy-${dataSend.patientId}-${new Date().getTime()}.png`,
          content: dataSend.imgBase64.split("base64,")[1],
          encoding: 'base64'
        }],
      });

      resolve({
        errCode: 0,
        errMessage: 'Ok'
      })
    }
    catch (e) {
      reject(e);
    }
  })
}

let getBodyHTMLEmailRemedy = (dataSend) => {
  let result = '';
  if (dataSend.language === 'en') {
    result =
      `
    <h3>Dear ${dataSend.patientName},</h3>
    <p>Livecare would like to send you information about the medical examination schedule you have booked.</p>
    <p> bla bala bala</p>
    <h4>Sincerely thank!</h4>
    `
  }

  if (dataSend.language === 'vi') {
    result =
      `
    <h3>Xin ch√†o ${dataSend.patientName},</h3>
    <p>Livecare xin g·ª≠i th√¥ng tin kh√°m b·ªánh c·ªßa b·∫°n.</p>
    <p>Th√¥ng tin ƒë∆°n thu·ªëc/h√≥a ƒë∆°n ƒë∆∞·ª£c g·ª≠i trong file ƒë√≠nh k√®m.</p>
    <h4>Xin ch√¢n th√†nh c·∫£m ∆°n!</h4>
    `
  }

  return result;
}

module.exports = {
  sendSimpleEmail: sendSimpleEmail,
  sendAttachment: sendAttachment,
}